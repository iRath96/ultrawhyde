// -*- Mode: ObjC; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4; fill-column: 100 -*-

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#import <CoreGraphics/CoreGraphics.h>
#import <Foundation/Foundation.h>

// #import "CGVirtualDisplay.h"
//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Foundation/Foundation.h>

@interface CGVirtualDisplay : NSObject
{
    unsigned int _vendorID;
    unsigned int _productID;
    unsigned int _serialNum;
    NSString *_name;
    struct CGSize _sizeInMillimeters;
    unsigned int _maxPixelsWide;
    unsigned int _maxPixelsHigh;
    struct CGPoint _redPrimary;
    struct CGPoint _greenPrimary;
    struct CGPoint _bluePrimary;
    struct CGPoint _whitePoint;
    id _queue;
    id _terminationHandler;
    void *_client;
    unsigned int _displayID;
    unsigned int _hiDPI;
    NSArray *_modes;
    unsigned int _serverRPC_port;
    unsigned int _proxyRPC_port;
    unsigned int _clientHandler_port;
}

@property(readonly, nonatomic) NSArray *modes; // @synthesize modes=_modes;
@property(readonly, nonatomic) unsigned int hiDPI; // @synthesize hiDPI=_hiDPI;
@property(readonly, nonatomic) unsigned int displayID; // @synthesize displayID=_displayID;
@property(readonly, nonatomic) id terminationHandler; // @synthesize terminationHandler=_terminationHandler;
@property(readonly, nonatomic) id queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) struct CGPoint whitePoint; // @synthesize whitePoint=_whitePoint;
@property(readonly, nonatomic) struct CGPoint bluePrimary; // @synthesize bluePrimary=_bluePrimary;
@property(readonly, nonatomic) struct CGPoint greenPrimary; // @synthesize greenPrimary=_greenPrimary;
@property(readonly, nonatomic) struct CGPoint redPrimary; // @synthesize redPrimary=_redPrimary;
@property(readonly, nonatomic) unsigned int maxPixelsHigh; // @synthesize maxPixelsHigh=_maxPixelsHigh;
@property(readonly, nonatomic) unsigned int maxPixelsWide; // @synthesize maxPixelsWide=_maxPixelsWide;
@property(readonly, nonatomic) struct CGSize sizeInMillimeters; // @synthesize sizeInMillimeters=_sizeInMillimeters;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) unsigned int serialNum; // @synthesize serialNum=_serialNum;
@property(readonly, nonatomic) unsigned int productID; // @synthesize productID=_productID;
@property(readonly, nonatomic) unsigned int vendorID; // @synthesize vendorID=_vendorID;
- (BOOL)applySettings:(id)arg1;
- (void)dealloc;
- (id)initWithDescriptor:(id)arg1;

@end


// #import "CGVirtualDisplayDescriptor.h"
//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Foundation/Foundation.h>

@interface CGVirtualDisplayDescriptor : NSObject
{
    unsigned int _vendorID;
    unsigned int _productID;
    unsigned int _serialNum;
    NSString *_name;
    struct CGSize _sizeInMillimeters;
    unsigned int _maxPixelsWide;
    unsigned int _maxPixelsHigh;
    struct CGPoint _redPrimary;
    struct CGPoint _greenPrimary;
    struct CGPoint _bluePrimary;
    struct CGPoint _whitePoint;
    id _queue;
    id _terminationHandler;
}

@property(retain, nonatomic) id queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) struct CGPoint whitePoint; // @synthesize whitePoint=_whitePoint;
@property(nonatomic) struct CGPoint bluePrimary; // @synthesize bluePrimary=_bluePrimary;
@property(nonatomic) struct CGPoint greenPrimary; // @synthesize greenPrimary=_greenPrimary;
@property(nonatomic) struct CGPoint redPrimary; // @synthesize redPrimary=_redPrimary;
@property(nonatomic) unsigned int maxPixelsHigh; // @synthesize maxPixelsHigh=_maxPixelsHigh;
@property(nonatomic) unsigned int maxPixelsWide; // @synthesize maxPixelsWide=_maxPixelsWide;
@property(nonatomic) struct CGSize sizeInMillimeters; // @synthesize sizeInMillimeters=_sizeInMillimeters;
@property(nonatomic) unsigned int serialNum; // @synthesize serialNum=_serialNum;
@property(nonatomic) unsigned int productID; // @synthesize productID=_productID;
@property(nonatomic) unsigned int vendorID; // @synthesize vendorID=_vendorID;
- (void)dealloc;
- (id)init;
@property(copy, nonatomic) id terminationHandler;
- (id)dispatchQueue;
- (void)setDispatchQueue:(id)arg1;

@end


//#import "CGVirtualDisplayMode.h"
//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface CGVirtualDisplayMode : NSObject
{
    unsigned int _width;
    unsigned int _height;
    double _refreshRate;
}

@property(readonly, nonatomic) double refreshRate; // @synthesize refreshRate=_refreshRate;
@property(readonly, nonatomic) unsigned int height; // @synthesize height=_height;
@property(readonly, nonatomic) unsigned int width; // @synthesize width=_width;
- (id)initWithWidth:(unsigned int)arg1 height:(unsigned int)arg2 refreshRate:(double)arg3;

@end


//#import "CGVirtualDisplaySettings.h"
//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Foundation/Foundation.h>

@interface CGVirtualDisplaySettings : NSObject
{
    NSArray *_modes;
    unsigned int _hiDPI;
}

@property(nonatomic) unsigned int hiDPI; // @synthesize hiDPI=_hiDPI;
- (void)dealloc;
- (id)init;
@property(retain, nonatomic) NSArray *modes;

@end


id createVirtualDisplay(int width, int height, int ppi, int refreshRate, BOOL hiDPI, NSString *name) {

    CGVirtualDisplaySettings *settings = [[CGVirtualDisplaySettings alloc] init];
    settings.hiDPI = hiDPI;

    CGVirtualDisplayDescriptor *descriptor = [[CGVirtualDisplayDescriptor alloc] init];
    descriptor.queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_HIGH, 0);
    descriptor.name = name;

    // See System Preferences > Displays > Color > Open Profile > Apple display native information
    descriptor.whitePoint = CGPointMake(0.3125, 0.3291);
    descriptor.bluePrimary = CGPointMake(0.1494, 0.0557);
    descriptor.greenPrimary = CGPointMake(0.2559, 0.6983);
    descriptor.redPrimary = CGPointMake(0.6797, 0.3203);
    descriptor.maxPixelsHigh = height;
    descriptor.maxPixelsWide = width;
    descriptor.sizeInMillimeters = CGSizeMake(25.4 * width / ppi, 25.4 * height / ppi);
    descriptor.serialNum = 1;
    descriptor.productID = 1;
    descriptor.vendorID = 1;

    CGVirtualDisplay *display = [[CGVirtualDisplay alloc] initWithDescriptor:descriptor];

    if (settings.hiDPI) {
        width /= 2;
        height /= 2;
    }
    CGVirtualDisplayMode *mode = [[CGVirtualDisplayMode alloc] initWithWidth:width
                                                                      height:height
                                                                 refreshRate:refreshRate];
    settings.modes = @[mode];

    if (![display applySettings:settings])
        return nil;

    return display;
}

unsigned int getDisplayId(id display_) {
    CGVirtualDisplay *display = display_;
    return [display displayID];
}
